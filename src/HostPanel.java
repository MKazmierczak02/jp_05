
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;


public class HostPanel extends JFrame {

    private JPanel root;
    private JPanel game;
    private JButton start_button;
    private JButton quit_button;

    private JTextField balls;
    private JTextField width;
    private JTextField height;
    private JTextField players;
    private JTextField port;
    private JTextField address;
    private JLabel ip_label;
    private JLabel port_label;
    public PlayField play_field;
    ServerSocket listener;
    Host host;

    public HostPanel() {
        $$$setupUI$$$();
        this.setContentPane(this.root);
        this.setTitle("HOST");
        this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        this.pack();
        this.setVisible(true);
        start_button.addActionListener(e -> {
                if (Integer.parseInt(width.getText())%2==0){
                    System.out.println("Liczba wierszy musi byc nieparzysta");
                }else {
                    try {
                        play_field = new PlayField(Integer.parseInt(width.getText()), Integer.parseInt(height.getText()), Integer.parseInt(players.getText()), Integer.parseInt(players.getText()), Integer.parseInt(balls.getText()));
                        listener = new ServerSocket(Integer.parseInt(port.getText()));
                        host = new Host(listener, Integer.parseInt(players.getText()), play_field, game);
                    } catch (IOException ex) {
                        throw new RuntimeException(ex);
                    }
                }
            game.add(play_field, BorderLayout.CENTER);
            host.start();
            address.setVisible(false);
            port.setVisible(false);
            ip_label.setVisible(false);
            port_label.setVisible(false);
            quit_button.setVisible(true);
            start_button.setVisible(false);
        });
        quit_button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    host.stop();
                    play_field.stop();
                    listener.close();
                } catch (IOException ex) {
                    throw new RuntimeException(ex);
                }
                game.removeAll();
                play_field.removeAll();
                address.setVisible(true);
                port.setVisible(true);
                ip_label.setVisible(true);
                port_label.setVisible(true);
                quit_button.setVisible(false);
                start_button.setVisible(true);
            }
        });
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        root = new JPanel();
        root.setLayout(new GridBagLayout());
        root.setBackground(new Color(-14278619));
        root.setForeground(new Color(-14278619));
        root.setMinimumSize(new Dimension(788, 624));
        root.setPreferredSize(new Dimension(788, 624));
        final JPanel spacer1 = new JPanel();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.gridheight = 2;
        gbc.fill = GridBagConstraints.VERTICAL;
        root.add(spacer1, gbc);
        game = new JPanel();
        game.setLayout(new BorderLayout(0, 0));
        game.setPreferredSize(new Dimension(400, 400));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        gbc.gridheight = 23;
        gbc.anchor = GridBagConstraints.NORTH;
        root.add(game, gbc);
        start_button = new JButton();
        start_button.setBackground(new Color(-12906694));
        start_button.setForeground(new Color(-4354));
        start_button.setText("Start PingPong");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 23;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        root.add(start_button, gbc);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 22;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        quit_button = new JButton();
        quit_button.setBackground(new Color(-12906694));
        quit_button.setText("Quit");
        quit_button.setVisible(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 24;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        root.add(quit_button, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }


    public static void main(String[] args){
        HostPanel hostPanel = new HostPanel();
    }


}
